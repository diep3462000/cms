<?php

/**
 * TaxDailyStatictisTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TaxDailyStatictisTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TaxDailyStatictisTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TaxDailyStatictis');
    }
    public static function getTotalRevenuByDay($gameId = null, $type_game = null, $date)
    {
        $sql =  TaxDailyStatictisTable::getInstance()->createQuery('a')
            ->select('SUM(a.taxValue) AS sumTaxValue');
        $sql->where('a.day = ?', $date);
//        $sql->andwhere('a.insertedTime <= ?', date('Y-m-d', time() - 24*3600));
        if($type_game == TypeGame::GOLD_MODE){
            $sql->andwhere('a.isCash = 0');
        }
        else {
            $sql->andwhere('a.isCash = 1');
        }
        if($gameId){
            $sql->andwhere('g.gameId = ?', $gameId);
        }
        return $sql->fetchArray();
    }
    public static function getTotalRevenuByMonth( $gameId = null, $type_game = null, $date)
    {
        $sql = TaxDailyStatictisTable::getInstance()->createQuery('a')
            ->select('SUM(a.taxValue) AS sumTaxValue, a.gameId  as gameid');

        $sql->where('a.day like ?', "%" . $date . "%");
        if($type_game == TypeGame::GOLD_MODE){
            $sql->andwhere('a.isCash = 0');
        }
        else {
            $sql->andwhere('a.isCash = 1');
        }
        if($gameId){
            $sql->andwhere('g.gameId = ?', $gameId);
        }
        return $sql->fetchArray();
    }

    /**
     * @param $gameId
     * @param $datefrom
     * @param $dateto

     * @return mixed
     * @modifier: diepth2 Chỉnh sửa để có thểm lấy thông tin thu nhập để VẼ BIỂU ĐỒ của tất cả DEV
     */
    public static function getRevenueGroupByDateFromTo($gameId = null, $datefrom, $dateto, $type_game = null, $os_type = null, $partner_id = null)
    {
        $sql = TaxDailyStatictisTable::getInstance()->createQuery('a')
            ->select('taxValue as sumTaxValue, a.day as DATE, a.gameId as gameid');
        $sql->where('a.day >= ?', $datefrom);
        $sql->andWhere('a.day <= ?', $dateto);
//        $sql = self::prepareQuery($sql, null , $type_game , $os_type );
        if($type_game == TypeGame::GOLD_MODE){
            $sql->andwhere('a.isCash = 0');
        } else {
            $sql->andwhere('a.isCash = 1');
        }
        if($gameId){
            $sql->andwhere('g.gameId = ?', $gameId);
        }
//        $sql->groupBy(" a.gameId ,  DATE(a.insertedTime)");
        $sql->orderBy(" a.day DESC");
        return $sql->fetchArray();
    }
    /**
     * 10/08/2016 - diepth2: truy cấn dữ liệu vẽ biểu đồ
     * @param
     * @param string $type_game : gold, cash
     * @return mixed
     * @modifier:
     */
    public static function getMoneyGroupByDate($gameId = null, $type_game = null, $os_type = null)
    {
        $sql = TaxDailyStatictisTable::getInstance()->createQuery('a')
            ->select('taxValue  as sumTaxValue, a.day as DATE, a.gameId as gameid');
        if($type_game == TypeGame::GOLD_MODE){
            $sql->andwhere('a.isCash = 0');
        } else {
            $sql->andwhere('a.isCash = 1');
        }
        if($gameId){
            $sql->andwhere('g.gameId = ?', $gameId);
        }//        $sql->groupBy("DATE(a.insertedTime)");
        return $sql->fetchArray();
    }
}