<?php

/**
 * UserInfoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class UserInfoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object UserInfoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('UserInfo');
    }
    public static function getTotalUserByOs()
    {
        $query = UserInfoTable::getInstance()->createQuery('a')
            ->select("count(a.clientId) as sum_os, c.name as os_name, a.clientId ");
        $query ->groupBy("a.clientId");
        $query->leftJoin("a.ClientType c");
        $query->orderBy("sum_os desc");
        return $query->fetchArray();
    }
    public static function getUserByMsisdn($msisdn)
    {
        return UserInfoTable::getInstance()->createQuery('a')
            ->select ("a.*")
            ->where("a.verifiedPhone = ?",$msisdn)
            ->fetchOne();
    }
    public static function getUserNameById($userId)
    {
        return UserInfoTable::getInstance()->createQuery('a')
            ->select ("a.*")
            ->where("a.userId = ?", $userId)
            ->fetchOne();
    }
    public static function getRegisterInfoNew($created_at)
    {
        return UserInfoTable::getInstance()->createQuery('a')
            ->select ('count(DISTINCT a.deviceIdentify), date(a.startPlayedTime)')
            ->groupby("date(a.startPlayedTime)")
            ->where("a.startPlayedTime > ?", $created_at)
            ->fetchArray();
    }
    public static function getPlayUserInday($created_at)
    {
        return UserInfoTable::getInstance()->createQuery('a')
            ->select ('count(DISTINCT a.deviceIdentify), date(a.lastLoginTime)')
            ->groupby("date(a.lastLoginTime)")
            ->where("a.lastLoginTime > ?", $created_at)
            ->fetchArray();
    }

    public static function getSumMoneyUser(){
        return UserInfoTable::getInstance()->createQuery('u')
            ->select ('SUM(u.gold) AS sum_gold, SUM(u.cash) AS sum_cash')
            ->fetchArray()[0];
    }
}