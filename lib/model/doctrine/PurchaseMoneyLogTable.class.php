<?php

/**
 * PurchaseMoneyLogTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PurchaseMoneyLogTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PurchaseMoneyLogTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PurchaseMoneyLog');
    }
    public static function getTotalRevenueByType($values = null)
    {
        $query = PurchaseMoneyLogTable::getInstance()->createQuery('a');
        $query->select("sum(a.parValue) as sum_money, sum(a.cashValue) as sum_cash, a.type");
//        $query->where($alias. ".money > 0");
//        $query->andWhere("status = 1");
        if ($values && array_key_exists('created_date', $values)) {
            $text = trim($values['created_date']['text']);
            $dateArr = explode('-', $text);
            if (count($dateArr) == 2) {
                $date1 = trim($dateArr[0]);
                $date1Arr = explode('/', $date1);
                $date1Str = '';
                if (count($date1Arr) == 3) {
                    $date1Str = $date1Arr[2] . '-' . $date1Arr[1] . '-' . $date1Arr[0] . ' 00:00:00';
                }
                $date2 = trim($dateArr[1]);
                $date2Arr = explode('/', $date2);
                $date2Str = '';
                if (count($date2Arr) == 3) {
                    $date2Str = $date2Arr[2] . '-' . $date2Arr[1] . '-' . $date2Arr[0] . ' 23:59:59';
                }
                $query->andWhere('a.purchasedTime BETWEEN ? AND ?', array($date1Str, $date2Str));
            }
        }
        if (array_key_exists('register_at', $values)) {
            $text = trim($values['register_at']['text']);
            $dateArr = explode('-', $text);
            if (count($dateArr) == 2) {
                $date1 = trim($dateArr[0]);
                $date1Arr = explode('/', $date1);
                $date1Str = '';
                if (count($date1Arr) == 3) {
                    $date1Str = $date1Arr[2] . '-' . $date1Arr[1] . '-' . $date1Arr[0] . ' 00:00:00';
                }
                $date2 = trim($dateArr[1]);
                $date2Arr = explode('/', $date2);
                $date2Str = '';
                if (count($date2Arr) == 3) {
                    $date2Str = $date2Arr[2] . '-' . $date2Arr[1] . '-' . $date2Arr[0] . ' 23:59:59';
                }
                $query->andWhere('g.startPlayedTime BETWEEN ? AND ?', array($date1Str, $date2Str));
            }
        }
        if(array_key_exists('type', $values)&& $values['type'] != ''){
            $query->andWhere("a.type = ?",$values["type"] );
        }
        if(array_key_exists('user_name', $values)&& $values['user_name'] != ''){
            $query->andWhere('lower(userName) LIKE ?  OR userId = ? ', array('%' . VtHelper::translateQuery($values['user_name']['text']) . '%', $values['user_name']['text']));
        }
        if(array_key_exists('partner_id', $values)&& $values['partner_id'] != ''){
            $query->andWhere("g.cp = ?",$values["partner_id"] );
        }
        if(array_key_exists('os_id', $values)&& $values['os_id'] != ''){
            $query->andWhere("g.clientID = ?",$values["os_id"] );
        }
        $query->leftJoin("a.UserInfo g");
        $query->leftJoin("g.Partner p");
        $query->groupBy("a.type");
        return $query->fetchArray();
    }
    public static function getTotalRevenueByDate($values = null)
    {
        $query = PurchaseMoneyLogTable::getInstance()->createQuery('a');
        $query->select("sum(a.parValue) as sum_money, sum(a.cashValue) as sum_cash, a.type, DATE(a.purchasedTime) as purchase_date");
        if ($values && array_key_exists('created_date', $values)) {
            $text = trim($values['created_date']['text']);
            $dateArr = explode('-', $text);
            if (count($dateArr) == 2) {
                $date1 = trim($dateArr[0]);
                $date1Arr = explode('/', $date1);
                $date1Str = '';
                if (count($date1Arr) == 3) {
                    $date1Str = $date1Arr[2] . '-' . $date1Arr[1] . '-' . $date1Arr[0] . ' 00:00:00';
                }
                $date2 = trim($dateArr[1]);
                $date2Arr = explode('/', $date2);
                $date2Str = '';
                if (count($date2Arr) == 3) {
                    $date2Str = $date2Arr[2] . '-' . $date2Arr[1] . '-' . $date2Arr[0] . ' 23:59:59';
                }
                $query->andWhere('a.purchasedTime BETWEEN ? AND ?', array($date1Str, $date2Str));
            }
        }
        if (array_key_exists('register_at', $values)) {
            $text = trim($values['register_at']['text']);
            $dateArr = explode('-', $text);
            if (count($dateArr) == 2) {
                $date1 = trim($dateArr[0]);
                $date1Arr = explode('/', $date1);
                $date1Str = '';
                if (count($date1Arr) == 3) {
                    $date1Str = $date1Arr[2] . '-' . $date1Arr[1] . '-' . $date1Arr[0] . ' 00:00:00';
                }
                $date2 = trim($dateArr[1]);
                $date2Arr = explode('/', $date2);
                $date2Str = '';
                if (count($date2Arr) == 3) {
                    $date2Str = $date2Arr[2] . '-' . $date2Arr[1] . '-' . $date2Arr[0] . ' 23:59:59';
                }
                $query->andWhere('g.startPlayedTime BETWEEN ? AND ?', array($date1Str, $date2Str));
            }
        }
        if(array_key_exists('type', $values)&& $values['type'] != ''){
            $query->andWhere("a.type = ?",$values["type"] );
        }
        if(array_key_exists('user_name', $values)&& $values['user_name'] != ''){
            $query->andWhere('lower(userName) LIKE ?  OR userId = ? ', array('%' . VtHelper::translateQuery($values['user_name']['text']) . '%', $values['user_name']['text']));
        }
        if(array_key_exists('partner_id', $values)&& $values['partner_id'] != ''){
            $query->andWhere("g.cp = ?",$values["partner_id"] );
        }
        if(array_key_exists('os_id', $values)&& $values['os_id'] != ''){
            $query->andWhere("g.clientID = ?",$values["os_id"] );
        }
        $query->leftJoin("a.UserInfo g");
        $query->leftJoin("g.Partner p");
        $query->groupBy("DATE(a.purchasedTime) , a.type");
        $query->orderBy("a.purchasedTime asc");
        $query->where("a.purchasedTime > ?",  Date("Y-m-d H:i:s", time() - 86400* 7));
        return $query->fetchArray();
    }
}