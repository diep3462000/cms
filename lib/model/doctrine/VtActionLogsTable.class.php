<?php

/**
 * VtActionLogsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class VtActionLogsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object VtActionLogsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('VtActionLogs');
    }

    /**
     * @param $action (Tên hành động ADDED, UPDATED, DELETED, WARNING_DEV, SUPPEND_DEV, SUPPEND_APP, RESET_PASSWORD)
     * @param $description (Nội dung thực hiện)
     * @param $model (Tên bảng tác động (1 bảng cho mỗi dòng))
     * @param $record_id (ID bản ghi bị tác động)
     */
    public static function createActionLogs($action, $description, $model, $record_id){
        $action_log = new VtActionLogs();
        $action_log->setAction($action);
        $action_log->setIp(VtHelper::getRealIpAddr());
        $action_log->setActorId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
        $action_log->setDescription($description);
        $action_log->setModel($model);
        $action_log->setRecordId($record_id);
        $action_log->save();
    }

    /**
     * @param $data
     * @author: trungpd2
     */
    public static function insertMultiActionLogs($dataList){
        $list = new Doctrine_Collection('VtActionLogs');
        foreach($dataList as $data){
            $item = new VtActionLogs();
            $item->setAction($data['name']);
            $item->setIp(VtHelper::getRealIpAddr());
            $item->setActorId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
            $item->setDescription($data['description']);
            $item->setModel($data['model']);
            $item->setRecordId($data['record_id']);
            $list->add($item);
        }
        $list->save();
    }

    public static function getListModelForSelectBox()
    {
        $arr_model = VtActionLogsTable::getInstance()->createQuery('a')
            ->select('DISTINCT (a.model) as tmodel')->fetchArray();
        $listModel = array();
        foreach($arr_model as $val){
            $str = explode(',', $val['tmodel']);
            for($i=0; $i< count($str); $i++){
                if (!in_array($str[$i], $listModel)) {
                    $listModel[$str[$i]] = $str[$i];
                }
            }
        }
        return $listModel;
    }

    public static function getListActionForSelectBox()
    {
        $arr_model = VtActionLogsTable::getInstance()->createQuery('a')
            ->select('DISTINCT (a.action) as taction')->fetchArray();
        $listModel = array();
        foreach($arr_model as $val){
            $listModel[$val['taction']] = $val['taction'];
        }
        return $listModel;
    }
}