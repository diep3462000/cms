<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Gift', 'doctrine');

/**
 * BaseGift
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $giftid
 * @property string $code
 * @property string $name
 * @property timestamp $createdtime
 * @property timestamp $expiredtime
 * @property integer $gifttypeid
 * @property integer $userid
 * @property string $username
 * @property string $description
 * @property integer $value
 * @property integer $volume
 * @property string $ip
 * @property integer $status
 * 
 * @method integer   getGiftid()      Returns the current record's "giftid" value
 * @method string    getCode()        Returns the current record's "code" value
 * @method string    getName()        Returns the current record's "name" value
 * @method timestamp getCreatedtime() Returns the current record's "createdtime" value
 * @method timestamp getExpiredtime() Returns the current record's "expiredtime" value
 * @method integer   getGifttypeid()  Returns the current record's "gifttypeid" value
 * @method integer   getUserid()      Returns the current record's "userid" value
 * @method string    getUsername()    Returns the current record's "username" value
 * @method string    getDescription() Returns the current record's "description" value
 * @method integer   getValue()       Returns the current record's "value" value
 * @method integer   getVolume()      Returns the current record's "volume" value
 * @method string    getIp()          Returns the current record's "ip" value
 * @method integer   getStatus()      Returns the current record's "status" value
 * @method Gift      setGiftid()      Sets the current record's "giftid" value
 * @method Gift      setCode()        Sets the current record's "code" value
 * @method Gift      setName()        Sets the current record's "name" value
 * @method Gift      setCreatedtime() Sets the current record's "createdtime" value
 * @method Gift      setExpiredtime() Sets the current record's "expiredtime" value
 * @method Gift      setGifttypeid()  Sets the current record's "gifttypeid" value
 * @method Gift      setUserid()      Sets the current record's "userid" value
 * @method Gift      setUsername()    Sets the current record's "username" value
 * @method Gift      setDescription() Sets the current record's "description" value
 * @method Gift      setValue()       Sets the current record's "value" value
 * @method Gift      setVolume()      Sets the current record's "volume" value
 * @method Gift      setIp()          Sets the current record's "ip" value
 * @method Gift      setStatus()      Sets the current record's "status" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGift extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('gift');
        $this->hasColumn('giftid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('createdtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('expiredtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('gifttypeid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('userid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('value', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('volume', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ip', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}