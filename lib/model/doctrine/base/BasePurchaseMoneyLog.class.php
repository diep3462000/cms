<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PurchaseMoneyLog', 'doctrine');

/**
 * BasePurchaseMoneyLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $purchaseLogId
 * @property integer $userId
 * @property string $userName
 * @property integer $cashValue
 * @property integer $currentCash
 * @property integer $purchasedTime
 * @property integer $parValue
 * @property integer $type
 * @property string $description
 * @property UserInfo $UserInfo
 * 
 * @method integer          getPurchaseLogId() Returns the current record's "purchaseLogId" value
 * @method integer          getUserId()        Returns the current record's "userId" value
 * @method string           getUserName()      Returns the current record's "userName" value
 * @method integer          getCashValue()     Returns the current record's "cashValue" value
 * @method integer          getCurrentCash()   Returns the current record's "currentCash" value
 * @method integer          getPurchasedTime() Returns the current record's "purchasedTime" value
 * @method integer          getParValue()      Returns the current record's "parValue" value
 * @method integer          getType()          Returns the current record's "type" value
 * @method string           getDescription()   Returns the current record's "description" value
 * @method UserInfo         getUserInfo()      Returns the current record's "UserInfo" value
 * @method PurchaseMoneyLog setPurchaseLogId() Sets the current record's "purchaseLogId" value
 * @method PurchaseMoneyLog setUserId()        Sets the current record's "userId" value
 * @method PurchaseMoneyLog setUserName()      Sets the current record's "userName" value
 * @method PurchaseMoneyLog setCashValue()     Sets the current record's "cashValue" value
 * @method PurchaseMoneyLog setCurrentCash()   Sets the current record's "currentCash" value
 * @method PurchaseMoneyLog setPurchasedTime() Sets the current record's "purchasedTime" value
 * @method PurchaseMoneyLog setParValue()      Sets the current record's "parValue" value
 * @method PurchaseMoneyLog setType()          Sets the current record's "type" value
 * @method PurchaseMoneyLog setDescription()   Sets the current record's "description" value
 * @method PurchaseMoneyLog setUserInfo()      Sets the current record's "UserInfo" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePurchaseMoneyLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('purchase_money_log');
        $this->hasColumn('purchaseLogId', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 11,
             ));
        $this->hasColumn('userId', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'user nap',
             'length' => 11,
             ));
        $this->hasColumn('userName', 'string', 32, array(
             'type' => 'string',
             'comment' => 'user nap',
             'length' => 32,
             ));
        $this->hasColumn('cashValue', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'giá trị cash nạp',
             'length' => 11,
             ));
        $this->hasColumn('currentCash', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'giá trị sau khi nạp',
             'length' => 11,
             ));
        $this->hasColumn('purchasedTime', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'thời gian giao dịch',
             'length' => 11,
             ));
        $this->hasColumn('parValue', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'mệnh giá tiền nạp',
             'length' => 11,
             ));
        $this->hasColumn('type', 'integer', 2, array(
             'type' => 'integer',
             'comment' => '1- nap the, 2: sms',
             'length' => 2,
             ));
        $this->hasColumn('description', 'string', 256, array(
             'type' => 'string',
             'comment' => 'Mô tả giao dịch',
             'length' => 256,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserInfo', array(
             'local' => 'userId',
             'foreign' => 'userId'));
    }
}