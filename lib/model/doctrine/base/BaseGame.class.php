<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Game', 'doctrine');

/**
 * BaseGame
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $gameid
 * @property string $name
 * @property string $description
 * @property string $help
 * @property integer $status
 * @property Doctrine_Collection $MatchLogs
 * @property Doctrine_Collection $MoneyLogs
 * 
 * @method integer             getGameid()      Returns the current record's "gameid" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method string              getHelp()        Returns the current record's "help" value
 * @method integer             getStatus()      Returns the current record's "status" value
 * @method Doctrine_Collection getMatchLogs()   Returns the current record's "MatchLogs" collection
 * @method Doctrine_Collection getMoneyLogs()   Returns the current record's "MoneyLogs" collection
 * @method Game                setGameid()      Sets the current record's "gameid" value
 * @method Game                setName()        Sets the current record's "name" value
 * @method Game                setDescription() Sets the current record's "description" value
 * @method Game                setHelp()        Sets the current record's "help" value
 * @method Game                setStatus()      Sets the current record's "status" value
 * @method Game                setMatchLogs()   Sets the current record's "MatchLogs" collection
 * @method Game                setMoneyLogs()   Sets the current record's "MoneyLogs" collection
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGame extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('game');
        $this->hasColumn('gameid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', 10000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10000,
             ));
        $this->hasColumn('help', 'string', 10000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10000,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MatchLog as MatchLogs', array(
             'local' => 'gameId',
             'foreign' => 'gameId'));

        $this->hasMany('MoneyLog as MoneyLogs', array(
             'local' => 'gameId',
             'foreign' => 'gameId'));
    }
}