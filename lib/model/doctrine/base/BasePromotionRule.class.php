<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PromotionRule', 'doctrine');

/**
 * BasePromotionRule
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $promotionruleid
 * @property timestamp $starttime
 * @property timestamp $endtime
 * @property integer $card
 * @property integer $sms
 * @property integer $isactive
 * @property string $title
 * @property string $description
 * @property integer $specialcard
 * @property integer $tierprice
 * @property string $cp
 * @property integer $highspecialcard
 * @property integer $hightierprice
 * 
 * @method integer       getPromotionruleid() Returns the current record's "promotionruleid" value
 * @method timestamp     getStarttime()       Returns the current record's "starttime" value
 * @method timestamp     getEndtime()         Returns the current record's "endtime" value
 * @method integer       getCard()            Returns the current record's "card" value
 * @method integer       getSms()             Returns the current record's "sms" value
 * @method integer       getIsactive()        Returns the current record's "isactive" value
 * @method string        getTitle()           Returns the current record's "title" value
 * @method string        getDescription()     Returns the current record's "description" value
 * @method integer       getSpecialcard()     Returns the current record's "specialcard" value
 * @method integer       getTierprice()       Returns the current record's "tierprice" value
 * @method string        getCp()              Returns the current record's "cp" value
 * @method integer       getHighspecialcard() Returns the current record's "highspecialcard" value
 * @method integer       getHightierprice()   Returns the current record's "hightierprice" value
 * @method PromotionRule setPromotionruleid() Sets the current record's "promotionruleid" value
 * @method PromotionRule setStarttime()       Sets the current record's "starttime" value
 * @method PromotionRule setEndtime()         Sets the current record's "endtime" value
 * @method PromotionRule setCard()            Sets the current record's "card" value
 * @method PromotionRule setSms()             Sets the current record's "sms" value
 * @method PromotionRule setIsactive()        Sets the current record's "isactive" value
 * @method PromotionRule setTitle()           Sets the current record's "title" value
 * @method PromotionRule setDescription()     Sets the current record's "description" value
 * @method PromotionRule setSpecialcard()     Sets the current record's "specialcard" value
 * @method PromotionRule setTierprice()       Sets the current record's "tierprice" value
 * @method PromotionRule setCp()              Sets the current record's "cp" value
 * @method PromotionRule setHighspecialcard() Sets the current record's "highspecialcard" value
 * @method PromotionRule setHightierprice()   Sets the current record's "hightierprice" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePromotionRule extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('promotion_rule');
        $this->hasColumn('promotionruleid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('starttime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('endtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('card', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sms', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('isactive', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('specialcard', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tierprice', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '5000000',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cp', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('highspecialcard', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('hightierprice', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '500000',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}