<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DataLog', 'doctrine');

/**
 * BaseDataLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $datalogid
 * @property timestamp $createdtime
 * @property timestamp $insertedtime
 * @property integer $userid
 * @property string $username
 * @property integer $matchid
 * @property integer $type
 * @property string $content
 * @property integer $clienttype
 * @property integer $matchindex
 * @property integer $duration
 * 
 * @method integer   getDatalogid()    Returns the current record's "datalogid" value
 * @method timestamp getCreatedtime()  Returns the current record's "createdtime" value
 * @method timestamp getInsertedtime() Returns the current record's "insertedtime" value
 * @method integer   getUserid()       Returns the current record's "userid" value
 * @method string    getUsername()     Returns the current record's "username" value
 * @method integer   getMatchid()      Returns the current record's "matchid" value
 * @method integer   getType()         Returns the current record's "type" value
 * @method string    getContent()      Returns the current record's "content" value
 * @method integer   getClienttype()   Returns the current record's "clienttype" value
 * @method integer   getMatchindex()   Returns the current record's "matchindex" value
 * @method integer   getDuration()     Returns the current record's "duration" value
 * @method DataLog   setDatalogid()    Sets the current record's "datalogid" value
 * @method DataLog   setCreatedtime()  Sets the current record's "createdtime" value
 * @method DataLog   setInsertedtime() Sets the current record's "insertedtime" value
 * @method DataLog   setUserid()       Sets the current record's "userid" value
 * @method DataLog   setUsername()     Sets the current record's "username" value
 * @method DataLog   setMatchid()      Sets the current record's "matchid" value
 * @method DataLog   setType()         Sets the current record's "type" value
 * @method DataLog   setContent()      Sets the current record's "content" value
 * @method DataLog   setClienttype()   Sets the current record's "clienttype" value
 * @method DataLog   setMatchindex()   Sets the current record's "matchindex" value
 * @method DataLog   setDuration()     Sets the current record's "duration" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDataLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('data_log');
        $this->hasColumn('datalogid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('createdtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('insertedtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('userid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('matchid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('clienttype', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('matchindex', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('duration', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}