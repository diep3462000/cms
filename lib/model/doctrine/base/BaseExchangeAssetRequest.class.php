<?php

/**
 * BaseExchangeAssetRequest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $requestId
 * @property bigint $requestUserId
 * @property string $requestUserName
 * @property integer $assetId
 * @property string $securityKey
 * @property integer $amount
 * @property integer $totalCash
 * @property integer $status
 * @property string $description
 * @property timestamp $checkedTime
 * @property string $responseData
 * @property string $request_topup_id
 * @property integer $totalParValue
 * @property User $User
 * 
 * @method integer              getRequestId()        Returns the current record's "requestId" value
 * @method bigint               getRequestUserId()    Returns the current record's "requestUserId" value
 * @method string               getRequestUserName()  Returns the current record's "requestUserName" value
 * @method integer              getAssetId()          Returns the current record's "assetId" value
 * @method string               getSecurityKey()      Returns the current record's "securityKey" value
 * @method integer              getAmount()           Returns the current record's "amount" value
 * @method integer              getTotalCash()        Returns the current record's "totalCash" value
 * @method integer              getStatus()           Returns the current record's "status" value
 * @method string               getDescription()      Returns the current record's "description" value
 * @method timestamp            getCheckedTime()      Returns the current record's "checkedTime" value
 * @method string               getResponseData()     Returns the current record's "responseData" value
 * @method string               getRequestTopupId()   Returns the current record's "request_topup_id" value
 * @method integer              getTotalParValue()    Returns the current record's "totalParValue" value
 * @method User                 getUser()             Returns the current record's "User" value
 * @method ExchangeAssetRequest setRequestId()        Sets the current record's "requestId" value
 * @method ExchangeAssetRequest setRequestUserId()    Sets the current record's "requestUserId" value
 * @method ExchangeAssetRequest setRequestUserName()  Sets the current record's "requestUserName" value
 * @method ExchangeAssetRequest setAssetId()          Sets the current record's "assetId" value
 * @method ExchangeAssetRequest setSecurityKey()      Sets the current record's "securityKey" value
 * @method ExchangeAssetRequest setAmount()           Sets the current record's "amount" value
 * @method ExchangeAssetRequest setTotalCash()        Sets the current record's "totalCash" value
 * @method ExchangeAssetRequest setStatus()           Sets the current record's "status" value
 * @method ExchangeAssetRequest setDescription()      Sets the current record's "description" value
 * @method ExchangeAssetRequest setCheckedTime()      Sets the current record's "checkedTime" value
 * @method ExchangeAssetRequest setResponseData()     Sets the current record's "responseData" value
 * @method ExchangeAssetRequest setRequestTopupId()   Sets the current record's "request_topup_id" value
 * @method ExchangeAssetRequest setTotalParValue()    Sets the current record's "totalParValue" value
 * @method ExchangeAssetRequest setUser()             Sets the current record's "User" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseExchangeAssetRequest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('exchange_asset_request');
        $this->hasColumn('requestId', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 11,
             ));
        $this->hasColumn('requestUserId', 'bigint', 20, array(
             'type' => 'bigint',
             'notnull' => true,
             'comment' => '',
             'length' => 20,
             ));
        $this->hasColumn('requestUserName', 'string', 32, array(
             'type' => 'string',
             'comment' => '',
             'length' => 32,
             ));
        $this->hasColumn('assetId', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => '',
             'length' => 11,
             ));
        $this->hasColumn('securityKey', 'string', 256, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Mã để cms kiểm tra có đúng request đổi thưởng từ người dùng không',
             'length' => 256,
             ));
        $this->hasColumn('amount', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => '',
             'length' => 11,
             ));
        $this->hasColumn('totalCash', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => 'tổng giá trị xu',
             'length' => 11,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => 'trạng thái yêu cầu: 0 - mới insert chưa xử lý, 1 - sms đã check thành công, 2 - thất bại',
             'length' => 1,
             ));
        $this->hasColumn('description', 'string', 256, array(
             'type' => 'string',
             'comment' => '',
             'length' => 256,
             ));
        $this->hasColumn('checkedTime', 'timestamp', null, array(
             'type' => 'timestamp',
             'comment' => 'Thời gian CMS check',
             ));
        $this->hasColumn('responseData', 'string', 2000, array(
             'type' => 'string',
             'comment' => 'Thông tin trả về',
             'length' => 2000,
             ));
        $this->hasColumn('request_topup_id', 'string', 32, array(
             'type' => 'string',
             'comment' => 'request id map voi topup',
             'length' => 32,
             ));
        $this->hasColumn('totalParValue', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'Giá trị thẻ nạp VNĐ',
             'length' => 11,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'requestUserId',
             'foreign' => 'userId'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}