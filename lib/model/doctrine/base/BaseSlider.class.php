<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Slider', 'doctrine');

/**
 * BaseSlider
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $slideid
 * @property string $title
 * @property string $url
 * @property timestamp $starttime
 * @property timestamp $endtime
 * @property string $file
 * @property string $cp
 * @property integer $status
 * 
 * @method integer   getSlideid()   Returns the current record's "slideid" value
 * @method string    getTitle()     Returns the current record's "title" value
 * @method string    getUrl()       Returns the current record's "url" value
 * @method timestamp getStarttime() Returns the current record's "starttime" value
 * @method timestamp getEndtime()   Returns the current record's "endtime" value
 * @method string    getFile()      Returns the current record's "file" value
 * @method string    getCp()        Returns the current record's "cp" value
 * @method integer   getStatus()    Returns the current record's "status" value
 * @method Slider    setSlideid()   Sets the current record's "slideid" value
 * @method Slider    setTitle()     Sets the current record's "title" value
 * @method Slider    setUrl()       Sets the current record's "url" value
 * @method Slider    setStarttime() Sets the current record's "starttime" value
 * @method Slider    setEndtime()   Sets the current record's "endtime" value
 * @method Slider    setFile()      Sets the current record's "file" value
 * @method Slider    setCp()        Sets the current record's "cp" value
 * @method Slider    setStatus()    Sets the current record's "status" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSlider extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('slider');
        $this->hasColumn('slideid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('starttime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('endtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('file', 'string', 155, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 155,
             ));
        $this->hasColumn('cp', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}