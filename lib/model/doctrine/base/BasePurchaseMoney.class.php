<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PurchaseMoney', 'doctrine');

/**
 * BasePurchaseMoney
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $purchaseid
 * @property integer $userid
 * @property string $username
 * @property string $provider
 * @property string $cardserial
 * @property string $cardpin
 * @property string $securitykey
 * @property integer $status
 * @property timestamp $senttime
 * @property timestamp $receivedtime
 * @property integer $cardvalue
 * @property integer $gamemoney
 * @property integer $tocash
 * 
 * @method integer       getPurchaseid()   Returns the current record's "purchaseid" value
 * @method integer       getUserid()       Returns the current record's "userid" value
 * @method string        getUsername()     Returns the current record's "username" value
 * @method string        getProvider()     Returns the current record's "provider" value
 * @method string        getCardserial()   Returns the current record's "cardserial" value
 * @method string        getCardpin()      Returns the current record's "cardpin" value
 * @method string        getSecuritykey()  Returns the current record's "securitykey" value
 * @method integer       getStatus()       Returns the current record's "status" value
 * @method timestamp     getSenttime()     Returns the current record's "senttime" value
 * @method timestamp     getReceivedtime() Returns the current record's "receivedtime" value
 * @method integer       getCardvalue()    Returns the current record's "cardvalue" value
 * @method integer       getGamemoney()    Returns the current record's "gamemoney" value
 * @method integer       getTocash()       Returns the current record's "tocash" value
 * @method PurchaseMoney setPurchaseid()   Sets the current record's "purchaseid" value
 * @method PurchaseMoney setUserid()       Sets the current record's "userid" value
 * @method PurchaseMoney setUsername()     Sets the current record's "username" value
 * @method PurchaseMoney setProvider()     Sets the current record's "provider" value
 * @method PurchaseMoney setCardserial()   Sets the current record's "cardserial" value
 * @method PurchaseMoney setCardpin()      Sets the current record's "cardpin" value
 * @method PurchaseMoney setSecuritykey()  Sets the current record's "securitykey" value
 * @method PurchaseMoney setStatus()       Sets the current record's "status" value
 * @method PurchaseMoney setSenttime()     Sets the current record's "senttime" value
 * @method PurchaseMoney setReceivedtime() Sets the current record's "receivedtime" value
 * @method PurchaseMoney setCardvalue()    Sets the current record's "cardvalue" value
 * @method PurchaseMoney setGamemoney()    Sets the current record's "gamemoney" value
 * @method PurchaseMoney setTocash()       Sets the current record's "tocash" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePurchaseMoney extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('purchase_money');
        $this->hasColumn('purchaseid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('userid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('provider', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('cardserial', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('cardpin', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('securitykey', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('senttime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('receivedtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('cardvalue', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('gamemoney', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tocash', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}