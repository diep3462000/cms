<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LogPayment', 'doctrine');

/**
 * BaseLogPayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $userid
 * @property string $seria
 * @property string $pin_card
 * @property string $providerId
 * @property integer $money
 * @property integer $type
 * @property integer $status
 * @property string $message
 * @property string $content
 * @property timestamp $request_time
 * 
 * @method integer    getId()           Returns the current record's "id" value
 * @method integer    getUserid()       Returns the current record's "userid" value
 * @method string     getSeria()        Returns the current record's "seria" value
 * @method string     getPinCard()      Returns the current record's "pin_card" value
 * @method string     getProviderId()   Returns the current record's "providerId" value
 * @method integer    getMoney()        Returns the current record's "money" value
 * @method integer    getType()         Returns the current record's "type" value
 * @method integer    getStatus()       Returns the current record's "status" value
 * @method string     getMessage()      Returns the current record's "message" value
 * @method string     getContent()      Returns the current record's "content" value
 * @method timestamp  getRequestTime()  Returns the current record's "request_time" value
 * @method LogPayment setId()           Sets the current record's "id" value
 * @method LogPayment setUserid()       Sets the current record's "userid" value
 * @method LogPayment setSeria()        Sets the current record's "seria" value
 * @method LogPayment setPinCard()      Sets the current record's "pin_card" value
 * @method LogPayment setProviderId()   Sets the current record's "providerId" value
 * @method LogPayment setMoney()        Sets the current record's "money" value
 * @method LogPayment setType()         Sets the current record's "type" value
 * @method LogPayment setStatus()       Sets the current record's "status" value
 * @method LogPayment setMessage()      Sets the current record's "message" value
 * @method LogPayment setContent()      Sets the current record's "content" value
 * @method LogPayment setRequestTime()  Sets the current record's "request_time" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLogPayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('log_payment');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('userid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('seria', 'string', 30, array(
             'type' => 'string',
             'comment' => 'seria',
             'length' => 30,
             ));
        $this->hasColumn('pin_card', 'string', 30, array(
             'type' => 'string',
             'comment' => 'mã thẻ',
             'length' => 30,
             ));
        $this->hasColumn('providerId', 'string', 30, array(
             'type' => 'string',
             'comment' => 'nhà cung cấp',
             'length' => 30,
             ));
        $this->hasColumn('money', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('message', 'string', 5000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5000,
             ));
        $this->hasColumn('content', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('request_time', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'comment' => 'Thời gian phản hồi',
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}