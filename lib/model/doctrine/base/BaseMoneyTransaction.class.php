<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MoneyTransaction', 'doctrine');

/**
 * BaseMoneyTransaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $transactionid
 * @property string $type
 * @property string $code
 * @property Doctrine_Collection $MoneyLogs
 * 
 * @method integer             getTransactionid() Returns the current record's "transactionid" value
 * @method string              getType()          Returns the current record's "type" value
 * @method string              getCode()          Returns the current record's "code" value
 * @method Doctrine_Collection getMoneyLogs()     Returns the current record's "MoneyLogs" collection
 * @method MoneyTransaction    setTransactionid() Sets the current record's "transactionid" value
 * @method MoneyTransaction    setType()          Sets the current record's "type" value
 * @method MoneyTransaction    setCode()          Sets the current record's "code" value
 * @method MoneyTransaction    setMoneyLogs()     Sets the current record's "MoneyLogs" collection
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMoneyTransaction extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('money_transaction');
        $this->hasColumn('transactionid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('type', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('code', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MoneyLog as MoneyLogs', array(
             'local' => 'transactionId',
             'foreign' => 'transactionId'));
    }
}