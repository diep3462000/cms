<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Level', 'doctrine');

/**
 * BaseLevel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $level
 * @property string $name
 * @property string $description
 * @property integer $maxexp
 * @property integer $cashgift
 * @property integer $goldgift
 * @property Doctrine_Collection $UserInfo
 * 
 * @method integer             getLevel()       Returns the current record's "level" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getMaxexp()      Returns the current record's "maxexp" value
 * @method integer             getCashgift()    Returns the current record's "cashgift" value
 * @method integer             getGoldgift()    Returns the current record's "goldgift" value
 * @method Doctrine_Collection getUserInfo()    Returns the current record's "UserInfo" collection
 * @method Level               setLevel()       Sets the current record's "level" value
 * @method Level               setName()        Sets the current record's "name" value
 * @method Level               setDescription() Sets the current record's "description" value
 * @method Level               setMaxexp()      Sets the current record's "maxexp" value
 * @method Level               setCashgift()    Sets the current record's "cashgift" value
 * @method Level               setGoldgift()    Sets the current record's "goldgift" value
 * @method Level               setUserInfo()    Sets the current record's "UserInfo" collection
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLevel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('level');
        $this->hasColumn('level', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('description', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('maxexp', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '100',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cashgift', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('goldgift', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '10000',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('UserInfo', array(
             'local' => 'level',
             'foreign' => 'level'));
    }
}