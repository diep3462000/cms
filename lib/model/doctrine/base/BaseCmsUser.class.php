<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CmsUser', 'doctrine');

/**
 * BaseCmsUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $user_name
 * @property timestamp $create_date
 * @property timestamp $modified_date
 * @property string $email
 * @property string $phone
 * @property string $mobile
 * @property integer $gender
 * @property date $date_of_birth
 * @property string $birth_place
 * @property string $first_name
 * @property string $middle_name
 * @property string $last_name
 * @property integer $status
 * @property string $password
 * @property integer $dept_id
 * @property string $address
 * @property string $description
 * @property string $verification_code
 * @property string $cp
 * 
 * @method integer   getUserId()            Returns the current record's "user_id" value
 * @method string    getUserName()          Returns the current record's "user_name" value
 * @method timestamp getCreateDate()        Returns the current record's "create_date" value
 * @method timestamp getModifiedDate()      Returns the current record's "modified_date" value
 * @method string    getEmail()             Returns the current record's "email" value
 * @method string    getPhone()             Returns the current record's "phone" value
 * @method string    getMobile()            Returns the current record's "mobile" value
 * @method integer   getGender()            Returns the current record's "gender" value
 * @method date      getDateOfBirth()       Returns the current record's "date_of_birth" value
 * @method string    getBirthPlace()        Returns the current record's "birth_place" value
 * @method string    getFirstName()         Returns the current record's "first_name" value
 * @method string    getMiddleName()        Returns the current record's "middle_name" value
 * @method string    getLastName()          Returns the current record's "last_name" value
 * @method integer   getStatus()            Returns the current record's "status" value
 * @method string    getPassword()          Returns the current record's "password" value
 * @method integer   getDeptId()            Returns the current record's "dept_id" value
 * @method string    getAddress()           Returns the current record's "address" value
 * @method string    getDescription()       Returns the current record's "description" value
 * @method string    getVerificationCode()  Returns the current record's "verification_code" value
 * @method string    getCp()                Returns the current record's "cp" value
 * @method CmsUser   setUserId()            Sets the current record's "user_id" value
 * @method CmsUser   setUserName()          Sets the current record's "user_name" value
 * @method CmsUser   setCreateDate()        Sets the current record's "create_date" value
 * @method CmsUser   setModifiedDate()      Sets the current record's "modified_date" value
 * @method CmsUser   setEmail()             Sets the current record's "email" value
 * @method CmsUser   setPhone()             Sets the current record's "phone" value
 * @method CmsUser   setMobile()            Sets the current record's "mobile" value
 * @method CmsUser   setGender()            Sets the current record's "gender" value
 * @method CmsUser   setDateOfBirth()       Sets the current record's "date_of_birth" value
 * @method CmsUser   setBirthPlace()        Sets the current record's "birth_place" value
 * @method CmsUser   setFirstName()         Sets the current record's "first_name" value
 * @method CmsUser   setMiddleName()        Sets the current record's "middle_name" value
 * @method CmsUser   setLastName()          Sets the current record's "last_name" value
 * @method CmsUser   setStatus()            Sets the current record's "status" value
 * @method CmsUser   setPassword()          Sets the current record's "password" value
 * @method CmsUser   setDeptId()            Sets the current record's "dept_id" value
 * @method CmsUser   setAddress()           Sets the current record's "address" value
 * @method CmsUser   setDescription()       Sets the current record's "description" value
 * @method CmsUser   setVerificationCode()  Sets the current record's "verification_code" value
 * @method CmsUser   setCp()                Sets the current record's "cp" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     ngoctv1
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCmsUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cms_user');
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_name', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('create_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('modified_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('email', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('phone', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('mobile', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('gender', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_of_birth', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('birth_place', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('first_name', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('middle_name', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('last_name', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('dept_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('verification_code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('cp', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 500,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}