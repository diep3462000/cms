<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Message', 'doctrine');

/**
 * BaseMessage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $messageid
 * @property integer $senderuserid
 * @property string $senderusername
 * @property integer $recipientuserid
 * @property string $recipientusername
 * @property string $title
 * @property string $body
 * @property timestamp $senttime
 * @property integer $status
 * @property integer $readed
 * @property integer $attachitemid
 * @property integer $attachitemquatity
 * @property timestamp $expiredtime
 * @property integer $parentid
 * 
 * @method integer   getMessageid()         Returns the current record's "messageid" value
 * @method integer   getSenderuserid()      Returns the current record's "senderuserid" value
 * @method string    getSenderusername()    Returns the current record's "senderusername" value
 * @method integer   getRecipientuserid()   Returns the current record's "recipientuserid" value
 * @method string    getRecipientusername() Returns the current record's "recipientusername" value
 * @method string    getTitle()             Returns the current record's "title" value
 * @method string    getBody()              Returns the current record's "body" value
 * @method timestamp getSenttime()          Returns the current record's "senttime" value
 * @method integer   getStatus()            Returns the current record's "status" value
 * @method integer   getReaded()            Returns the current record's "readed" value
 * @method integer   getAttachitemid()      Returns the current record's "attachitemid" value
 * @method integer   getAttachitemquatity() Returns the current record's "attachitemquatity" value
 * @method timestamp getExpiredtime()       Returns the current record's "expiredtime" value
 * @method integer   getParentid()          Returns the current record's "parentid" value
 * @method Message   setMessageid()         Sets the current record's "messageid" value
 * @method Message   setSenderuserid()      Sets the current record's "senderuserid" value
 * @method Message   setSenderusername()    Sets the current record's "senderusername" value
 * @method Message   setRecipientuserid()   Sets the current record's "recipientuserid" value
 * @method Message   setRecipientusername() Sets the current record's "recipientusername" value
 * @method Message   setTitle()             Sets the current record's "title" value
 * @method Message   setBody()              Sets the current record's "body" value
 * @method Message   setSenttime()          Sets the current record's "senttime" value
 * @method Message   setStatus()            Sets the current record's "status" value
 * @method Message   setReaded()            Sets the current record's "readed" value
 * @method Message   setAttachitemid()      Sets the current record's "attachitemid" value
 * @method Message   setAttachitemquatity() Sets the current record's "attachitemquatity" value
 * @method Message   setExpiredtime()       Sets the current record's "expiredtime" value
 * @method Message   setParentid()          Sets the current record's "parentid" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMessage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('message');
        $this->hasColumn('messageid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('senderuserid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('senderusername', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('recipientuserid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('recipientusername', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('title', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('body', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('senttime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('readed', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('attachitemid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('attachitemquatity', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('expiredtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('parentid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}