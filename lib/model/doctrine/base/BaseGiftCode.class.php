<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('GiftCode', 'doctrine');

/**
 * BaseGiftCode
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $giftId
 * @property integer $giftEventId
 * @property integer $userId
 * @property string $userName
 * @property integer $cashValue
 * @property integer $goldValue
 * @property string $code
 * @property timestamp $expiredTime
 * @property integer $reuseable
 * @property integer $status
 * @property string $ip
 * @property string $description
 * @property integer $adminId
 * @property GiftEvent $GiftEvent
 * @property sfGuardUser $sfGuardUser
 * 
 * @method integer     getGiftId()      Returns the current record's "giftId" value
 * @method integer     getGiftEventId() Returns the current record's "giftEventId" value
 * @method integer     getUserId()      Returns the current record's "userId" value
 * @method string      getUserName()    Returns the current record's "userName" value
 * @method integer     getCashValue()   Returns the current record's "cashValue" value
 * @method integer     getGoldValue()   Returns the current record's "goldValue" value
 * @method string      getCode()        Returns the current record's "code" value
 * @method timestamp   getExpiredTime() Returns the current record's "expiredTime" value
 * @method integer     getReuseable()   Returns the current record's "reuseable" value
 * @method integer     getStatus()      Returns the current record's "status" value
 * @method string      getIp()          Returns the current record's "ip" value
 * @method string      getDescription() Returns the current record's "description" value
 * @method integer     getAdminId()     Returns the current record's "adminId" value
 * @method GiftEvent   getGiftEvent()   Returns the current record's "GiftEvent" value
 * @method sfGuardUser getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method GiftCode    setGiftId()      Sets the current record's "giftId" value
 * @method GiftCode    setGiftEventId() Sets the current record's "giftEventId" value
 * @method GiftCode    setUserId()      Sets the current record's "userId" value
 * @method GiftCode    setUserName()    Sets the current record's "userName" value
 * @method GiftCode    setCashValue()   Sets the current record's "cashValue" value
 * @method GiftCode    setGoldValue()   Sets the current record's "goldValue" value
 * @method GiftCode    setCode()        Sets the current record's "code" value
 * @method GiftCode    setExpiredTime() Sets the current record's "expiredTime" value
 * @method GiftCode    setReuseable()   Sets the current record's "reuseable" value
 * @method GiftCode    setStatus()      Sets the current record's "status" value
 * @method GiftCode    setIp()          Sets the current record's "ip" value
 * @method GiftCode    setDescription() Sets the current record's "description" value
 * @method GiftCode    setAdminId()     Sets the current record's "adminId" value
 * @method GiftCode    setGiftEvent()   Sets the current record's "GiftEvent" value
 * @method GiftCode    setSfGuardUser() Sets the current record's "sfGuardUser" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGiftCode extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('gift_code');
        $this->hasColumn('giftId', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('giftEventId', 'integer', 11, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('userId', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'userid người chơi',
             'length' => 11,
             ));
        $this->hasColumn('userName', 'string', 50, array(
             'type' => 'string',
             'comment' => 'userName người chơi',
             'length' => 50,
             ));
        $this->hasColumn('cashValue', 'integer', 11, array(
             'type' => 'integer',
             'comment' => '',
             'length' => 11,
             ));
        $this->hasColumn('goldValue', 'integer', 11, array(
             'type' => 'integer',
             'comment' => '',
             'length' => 11,
             ));
        $this->hasColumn('code', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => '',
             'unique' => true,
             'length' => 20,
             ));
        $this->hasColumn('expiredTime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'comment' => 'Thời điểm hết hạn. Đổi tên từ expired',
             'length' => 25,
             ));
        $this->hasColumn('reuseable', 'integer', 2, array(
             'type' => 'integer',
             'comment' => '0: dem so lan; 1: ko dem so lan su dung-su dung nhieu lan 1 ma',
             'length' => 2,
             ));
        $this->hasColumn('status', 'integer', 2, array(
             'type' => 'integer',
             'comment' => 'Trạng thái: 1: active, 0: đã sử dụng',
             'length' => 2,
             ));
        $this->hasColumn('ip', 'string', 50, array(
             'type' => 'string',
             'comment' => 'Đổi đến từ IP',
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', 250, array(
             'type' => 'string',
             'comment' => 'Mô tả',
             'length' => 250,
             ));
        $this->hasColumn('adminId', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'adminid người tạo sự kiện',
             'length' => 11,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('GiftEvent', array(
             'local' => 'giftEventId',
             'foreign' => 'giftEventId'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'adminId',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}