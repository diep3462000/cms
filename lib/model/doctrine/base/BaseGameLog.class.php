<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('GameLog', 'doctrine');

/**
 * BaseGameLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $gamelogid
 * @property integer $gameid
 * @property integer $hostuserid
 * @property integer $winnerid
 * @property integer $roomid
 * @property integer $cash
 * @property integer $gold
 * @property integer $uniqueid
 * @property timestamp $inserttime
 * @property string $roomname
 * @property integer $playernumber
 * @property integer $playercount
 * 
 * @method integer   getGamelogid()    Returns the current record's "gamelogid" value
 * @method integer   getGameid()       Returns the current record's "gameid" value
 * @method integer   getHostuserid()   Returns the current record's "hostuserid" value
 * @method integer   getWinnerid()     Returns the current record's "winnerid" value
 * @method integer   getRoomid()       Returns the current record's "roomid" value
 * @method integer   getCash()         Returns the current record's "cash" value
 * @method integer   getGold()         Returns the current record's "gold" value
 * @method integer   getUniqueid()     Returns the current record's "uniqueid" value
 * @method timestamp getInserttime()   Returns the current record's "inserttime" value
 * @method string    getRoomname()     Returns the current record's "roomname" value
 * @method integer   getPlayernumber() Returns the current record's "playernumber" value
 * @method integer   getPlayercount()  Returns the current record's "playercount" value
 * @method GameLog   setGamelogid()    Sets the current record's "gamelogid" value
 * @method GameLog   setGameid()       Sets the current record's "gameid" value
 * @method GameLog   setHostuserid()   Sets the current record's "hostuserid" value
 * @method GameLog   setWinnerid()     Sets the current record's "winnerid" value
 * @method GameLog   setRoomid()       Sets the current record's "roomid" value
 * @method GameLog   setCash()         Sets the current record's "cash" value
 * @method GameLog   setGold()         Sets the current record's "gold" value
 * @method GameLog   setUniqueid()     Sets the current record's "uniqueid" value
 * @method GameLog   setInserttime()   Sets the current record's "inserttime" value
 * @method GameLog   setRoomname()     Sets the current record's "roomname" value
 * @method GameLog   setPlayernumber() Sets the current record's "playernumber" value
 * @method GameLog   setPlayercount()  Sets the current record's "playercount" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGameLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('game_log');
        $this->hasColumn('gamelogid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('gameid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('hostuserid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('winnerid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('roomid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cash', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gold', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('uniqueid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('inserttime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('roomname', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('playernumber', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('playercount', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}