<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cp', 'doctrine');

/**
 * BaseCp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $cpid
 * @property string $cpname
 * @property timestamp $createdtime
 * @property timestamp $modifiedtime
 * @property string $cashcurrency
 * @property string $goldcurrency
 * @property string $homepage
 * @property string $noticetext
 * @property string $privatekey
 * @property integer $status
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getCpid()         Returns the current record's "cpid" value
 * @method string    getCpname()       Returns the current record's "cpname" value
 * @method timestamp getCreatedtime()  Returns the current record's "createdtime" value
 * @method timestamp getModifiedtime() Returns the current record's "modifiedtime" value
 * @method string    getCashcurrency() Returns the current record's "cashcurrency" value
 * @method string    getGoldcurrency() Returns the current record's "goldcurrency" value
 * @method string    getHomepage()     Returns the current record's "homepage" value
 * @method string    getNoticetext()   Returns the current record's "noticetext" value
 * @method string    getPrivatekey()   Returns the current record's "privatekey" value
 * @method integer   getStatus()       Returns the current record's "status" value
 * @method Cp        setId()           Sets the current record's "id" value
 * @method Cp        setCpid()         Sets the current record's "cpid" value
 * @method Cp        setCpname()       Sets the current record's "cpname" value
 * @method Cp        setCreatedtime()  Sets the current record's "createdtime" value
 * @method Cp        setModifiedtime() Sets the current record's "modifiedtime" value
 * @method Cp        setCashcurrency() Sets the current record's "cashcurrency" value
 * @method Cp        setGoldcurrency() Sets the current record's "goldcurrency" value
 * @method Cp        setHomepage()     Sets the current record's "homepage" value
 * @method Cp        setNoticetext()   Sets the current record's "noticetext" value
 * @method Cp        setPrivatekey()   Sets the current record's "privatekey" value
 * @method Cp        setStatus()       Sets the current record's "status" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCp extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cp');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cpid', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('cpname', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('createdtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('modifiedtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('cashcurrency', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'Xu',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('goldcurrency', 'string', 5, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'Ken',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 5,
             ));
        $this->hasColumn('homepage', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'http://www.kengame.net',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('noticetext', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('privatekey', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}