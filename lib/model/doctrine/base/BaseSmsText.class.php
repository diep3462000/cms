<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SmsText', 'doctrine');

/**
 * BaseSmsText
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $smstextid
 * @property integer $gameid
 * @property integer $partnerid
 * @property string $txref
 * @property string $operatornumber
 * @property string $cmdcode
 * @property string $msisdn
 * @property string $mobody
 * @property string $mtbody
 * @property integer $targetuserid
 * @property string $targetusername
 * @property timestamp $receivedtime
 * @property timestamp $responedtime
 * @property integer $status
 * 
 * @method integer   getSmstextid()      Returns the current record's "smstextid" value
 * @method integer   getGameid()         Returns the current record's "gameid" value
 * @method integer   getPartnerid()      Returns the current record's "partnerid" value
 * @method string    getTxref()          Returns the current record's "txref" value
 * @method string    getOperatornumber() Returns the current record's "operatornumber" value
 * @method string    getCmdcode()        Returns the current record's "cmdcode" value
 * @method string    getMsisdn()         Returns the current record's "msisdn" value
 * @method string    getMobody()         Returns the current record's "mobody" value
 * @method string    getMtbody()         Returns the current record's "mtbody" value
 * @method integer   getTargetuserid()   Returns the current record's "targetuserid" value
 * @method string    getTargetusername() Returns the current record's "targetusername" value
 * @method timestamp getReceivedtime()   Returns the current record's "receivedtime" value
 * @method timestamp getResponedtime()   Returns the current record's "responedtime" value
 * @method integer   getStatus()         Returns the current record's "status" value
 * @method SmsText   setSmstextid()      Sets the current record's "smstextid" value
 * @method SmsText   setGameid()         Sets the current record's "gameid" value
 * @method SmsText   setPartnerid()      Sets the current record's "partnerid" value
 * @method SmsText   setTxref()          Sets the current record's "txref" value
 * @method SmsText   setOperatornumber() Sets the current record's "operatornumber" value
 * @method SmsText   setCmdcode()        Sets the current record's "cmdcode" value
 * @method SmsText   setMsisdn()         Sets the current record's "msisdn" value
 * @method SmsText   setMobody()         Sets the current record's "mobody" value
 * @method SmsText   setMtbody()         Sets the current record's "mtbody" value
 * @method SmsText   setTargetuserid()   Sets the current record's "targetuserid" value
 * @method SmsText   setTargetusername() Sets the current record's "targetusername" value
 * @method SmsText   setReceivedtime()   Sets the current record's "receivedtime" value
 * @method SmsText   setResponedtime()   Sets the current record's "responedtime" value
 * @method SmsText   setStatus()         Sets the current record's "status" value
 * 
 * @package    Vt_Portals
 * @subpackage model
 * @author     diepth2
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSmsText extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sms_text');
        $this->hasColumn('smstextid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('gameid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('partnerid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('txref', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('operatornumber', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cmdcode', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('msisdn', 'string', 12, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 12,
             ));
        $this->hasColumn('mobody', 'string', 160, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 160,
             ));
        $this->hasColumn('mtbody', 'string', 160, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 160,
             ));
        $this->hasColumn('targetuserid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('targetusername', 'string', 75, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 75,
             ));
        $this->hasColumn('receivedtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('responedtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}